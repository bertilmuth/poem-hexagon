plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
}

group = 'org.requirementsascode'
version = '2.0'

sourceCompatibility = 8
targetCompatibility = 8

repositories {
	mavenCentral()
}

jar {
    manifest {
        attributes 'Implementation-Title': 'poem - hexagon',
                   'Implementation-Version': archiveVersion
	}
}

dependencies {
	implementation 'org.requirementsascode:requirementsascodecore:2.0'
  testImplementation 'junit:junit:4.12'
}
repositories {
	mavenCentral()
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots/"
	}
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

if (project.hasProperty("signing.keyId")) {
  apply plugin: 'signing'

  publishing {
    publications {
      mavenJava(MavenPublication) {
        pom{
          name = 'poem-hexagon'
          description = 'A simple example for a hexagonal architecture.'
          url = 'http://requirementsascode.org/'
          packaging = 'jar'
          
          from components.java
                          
              artifact javadocJar {
            classifier "javadoc"
              }
          
          artifact sourcesJar {
            classifier "sources"
              }

          licenses {
            license {
              name = 'The Apache Software License, Version 2.0'
              url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }
          
          developers {
            developer {
              id = 'bertilmuth'
              name = 'Bertil Muth'
            }
          }
          
          scm {
            url = 'scm:git@github.com:bertilmuth/requirementsascode.git'
            connection = 'scm:git@github.com:bertilmuth/requirementsascode.git'
            developerConnection = 'scm:git@github.com:bertilmuth/requirementsascode.git'
          }
        }
      }
    }
    
    repositories {
      maven {
        credentials {
          username sonatypeUsername
          password sonatypePassword
        }
        
        def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
        def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
      }
    }
  }
  
  signing {
    sign publishing.publications.mavenJava
  }
}